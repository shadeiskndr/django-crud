# Generated by Django 5.2.3 on 2025-07-07 08:52

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('backend_api', '0006_remove_movie_adult'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Review title/headline', max_length=200)),
                ('content', models.TextField(help_text='Review content')),
                ('rating', models.FloatField(help_text='Rating from 0.0 to 10.0', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('HIDDEN', 'Hidden'), ('DELETED', 'Deleted')], default='DRAFT', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False, help_text='Featured by moderators')),
                ('moderation_notes', models.TextField(blank=True, help_text='Internal moderation notes')),
                ('helpful_count', models.PositiveIntegerField(default=0)),
                ('reported_count', models.PositiveIntegerField(default=0)),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_reviews', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='backend_api.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('SPAM', 'Spam'), ('INAPPROPRIATE', 'Inappropriate Content'), ('SPOILERS', 'Contains Spoilers'), ('OFF_TOPIC', 'Off Topic'), ('HARASSMENT', 'Harassment'), ('OTHER', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True, help_text='Additional details')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_reports', to=settings.AUTH_USER_MODEL)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='reviews.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(choices=[('HELPFUL', 'Helpful'), ('NOT_HELPFUL', 'Not Helpful')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='reviews.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_votes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['movie', 'status', '-published_at'], name='reviews_rev_movie_i_d8a167_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['user', 'status'], name='reviews_rev_user_id_194b3a_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['status', '-helpful_count'], name='reviews_rev_status_ba4e9b_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['is_featured', 'status'], name='reviews_rev_is_feat_191d4b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('user', 'movie')},
        ),
        migrations.AddIndex(
            model_name='reviewreport',
            index=models.Index(fields=['resolved', 'created_at'], name='reviews_rev_resolve_36084f_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewreport',
            index=models.Index(fields=['review', 'resolved'], name='reviews_rev_review__288193_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reviewreport',
            unique_together={('user', 'review')},
        ),
        migrations.AddIndex(
            model_name='reviewvote',
            index=models.Index(fields=['review', 'vote_type'], name='reviews_rev_review__fbe00e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reviewvote',
            unique_together={('user', 'review')},
        ),
    ]
